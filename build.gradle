plugins {
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.30'
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.30'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.30'
    id 'com.adarshr.test-logger' version '1.6.0'
}

apply plugin: 'kotlin-jpa'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-kapt'

group = 'nz.zoltan'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
        exclude module: 'mockito-core'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation("com.ninja-squad:springmockk:1.1.2")
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    kapt("org.springframework.boot:spring-boot-configuration-processor")
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

allOpen {
    annotation("javax.persistence.Entity")
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/kotlin/main")
    }
}

test {
    useJUnitPlatform()
}

testlogger {
    theme 'mocha-parallel'
    showExceptions true
    slowThreshold 2000
    showSummary true
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams false
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
}